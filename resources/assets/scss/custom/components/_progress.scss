//
// _progress.scss
//

.progress {
  cursor: pointer;
}

.custom-progess {
  position: relative;

  .progress-icon {
    position: absolute;
    top: -12px;

    .avatar-title {
      background: var(--#{$prefix}secondary-bg);
    }
  }
}

// animated-progess
.animated-progess {
  position: relative;

  .progress-bar {
    position: relative;
    border-radius: 6px;
    animation: animate-positive 2s;
  }
}

@keyframes animate-positive {
  0% {
    width: 0;
  }
}

// Define Progress Sizes
$progress-sizes: (
  xs: 6px,
  sm: 8px,
  md: 12px,
  lg: 16px,
  xl: 20px,
);

// Mixin for Progress Size
@mixin progress-size($size) {
  height: map-get($progress-sizes, $size);
}

// Apply Styles Using Mixin
.progress {
  @include progress-size(md);
}

.progress-xs {
  @include progress-size(xs);
}

.progress-sm {
  @include progress-size(sm);
}

.progress-lg {
  @include progress-size(lg);
}

.progress-xl {
  @include progress-size(xl);
}

// Size map for circular progress
.circular-progress {

  // Default styles for circular progress
  --progress: 40;
  --progress-bg-color: var(--#{$prefix}tertiary-bg);
  --stroke-width: 10px;
  --progress-size: 90px;
  --half-size: calc(var(--progress-size) / 2);
  --radius: calc((var(--progress-size) - var(--stroke-width)) / 2);
  --circumference: calc(var(--radius) * pi * 2);
  --dash: calc((var(--progress) * var(--circumference)) / 100);
  position: relative;
  width: var(--progress-size);
  height: var(--progress-size);

  &:hover {
    cursor: pointer;

    .bg-circular-progress {
      stroke: #ececef;
    }

    .circular-text {
      color: var(--#{$prefix}primary);
    }
  }
}

.circular-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 14px;
  font-weight: 600;
}

.circular-inner {
  width: var(--progress-size);
  height: var(--progress-size);
  display: inline-block;

  circle {
    cx: var(--half-size);
    cy: var(--half-size);
    r: var(--radius);
    stroke-width: var(--stroke-width);
    fill: none;
    stroke-linecap: round;
  }

  .bg-circular-progress {
    stroke: var(--progress-bg-color);
    transition: $transition-base;
  }

  .fg-circular-progress {
    stroke: var(--#{$prefix}primary);
    transform: rotate(-90deg);
    transform-origin: var(--half-size) var(--half-size);
    stroke-dasharray: var(--dash) calc(var(--circumference) - var(--dash));
    transition: stroke-dasharray 0.6s ease-in-out;
  }
}

.circular-progress.circular-sm {
  --stroke-width: 4px;
  --progress-size: 56px;

  .circular-text {
    font-size: 12px;
  }
}

.circular-progress.circular-md {
  --stroke-width: 8px;
  --progress-size: 76px;
}

.circular-progress.circular-xl {
  --stroke-width: 12px;
  --progress-size: 110px;
}

.circular-progress.circular-xxl {
  --stroke-width: 14px;
  --progress-size: 130px;
}

// Loop through the theme colors
@each $name, $color in $theme-colors {
  .circular-progress.circular-progress-#{$name} {
    .circular-inner {
      .fg-circular-progress {
        stroke: var(--#{$prefix}#{$name});
      }
    }

    &:hover {
      .circular-text {
        color: var(--#{$prefix}#{$name});
      }
    }
  }
}
